name: Build Jekyll Page

on:
  push:
    branches: [ master ]

    # Frontend will not be rebuild if only backend changed
    paths-ignore:
      - backend/*

jobs:
  jekyll_preview:
    name: Build and deploy Jekyll site
    runs-on: ubuntu-latest

    steps:
      # Checkout the source code
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2

      # In this step, this action saves a list of existing images,
      # the cache is created without them in the post run.
      # It also restores the cache if it exists.
      - name: ‚õè  Restore docker image from cache
        uses: satackey/action-docker-layer-caching@v0.0.11
        # Ignore the failure of a step and avoid terminating the job.
        continue-on-error: true

      # Used downstream for building the jekyll page
      - name: Build the Docker image
        run: docker build -t jeykell-builder .

      # fetch and encrypt access credentials for Google Drive
      - name: Retrieve the secret and decode it to a file
        env:
          API_KEY: ${{ secrets.API_KEY }}
        run: |
          echo $API_KEY > ./_secrets/credentials.json

      # We cache static resources, i.g. optimized images and documents as well as
      # the _site folder and .jekyll-cache directory
      # Make sure to NOT cache the `_secrets` directory, it contains the Google Drive Access Credentials!
      - name: ‚õèÔ∏è Restore static files from cache
        uses: actions/cache@v3
        with:
          path: |
            gallery
            imgs
            docs
          # Updates the cache after every run, by saving a new copy
          key: ${{ runner.os }}-static-files-v2.8-${{ github.run_id }}
          restore-keys: ${{ runner.os }}-static-files-v2.8-

      # Allow the docker container to write to the mounted directory
      - name: Give folder access
        run: chmod -R 777 $PWD

      # Build the jekyll page
      - name: Build üèóÔ∏è
        run: docker run --rm --volume="$PWD:/srv/jekyll" -e GITHUB_SHA=$GITHUB_SHA jeykell-builder

      # Deploy Frontend to GitHub Pages
      - name: Deploy üöÄ to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_CEVI_ZH11_WEBPAGE }}'
          channelId: live
          projectId: cevi-zh11-webpage